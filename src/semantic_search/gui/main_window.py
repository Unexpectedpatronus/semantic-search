"""–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–±–∞–∑–æ–≤–∞—è –∑–∞–≥–ª—É—à–∫–∞)"""

from loguru import logger
from PyQt6.QtCore import Qt
from PyQt6.QtWidgets import (
    QLabel,
    QMainWindow,
    QMessageBox,
    QPushButton,
    QVBoxLayout,
    QWidget,
)

from semantic_search.config import GUI_CONFIG


class MainWindow(QMainWindow):
    """–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""

    def __init__(self):
        super().__init__()
        self.setWindowTitle(GUI_CONFIG["window_title"])
        self.setGeometry(100, 100, *GUI_CONFIG["window_size"])

        # –°–æ–∑–¥–∞–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        central_widget = QWidget()
        self.setCentralWidget(central_widget)

        # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π layout
        layout = QVBoxLayout(central_widget)

        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–ª—É—à–∫—É
        welcome_label = QLabel("üîç Semantic Document Search")
        welcome_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        welcome_label.setStyleSheet("font-size: 24px; font-weight: bold; margin: 20px;")

        status_label = QLabel(
            "Backend –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ! GUI –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —ç—Ç–∞–ø–µ."
        )
        status_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        status_label.setStyleSheet("font-size: 14px; color: green; margin: 10px;")

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è backend
        test_button = QPushButton("–¢–µ—Å—Ç Backend")
        test_button.clicked.connect(self.test_backend)

        layout.addWidget(welcome_label)
        layout.addWidget(status_label)
        layout.addWidget(test_button)

        logger.info("–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ")

    def test_backend(self):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ backend –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
        try:
            from semantic_search.core.doc2vec_trainer import Doc2VecTrainer
            from semantic_search.core.document_processor import DocumentProcessor
            from semantic_search.core.search_engine import SemanticSearchEngine
            from semantic_search.core.text_summarizer import TextSummarizer

            # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–ª–∞—Å—Å–æ–≤
            processor = DocumentProcessor()
            trainer = Doc2VecTrainer()
            search_engine = SemanticSearchEngine()
            summarizer = TextSummarizer()

            QMessageBox.information(
                self,
                "–¢–µ—Å—Ç Backend",
                "‚úÖ –í—Å–µ backend –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!\n\n"
                "–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:\n"
                "‚Ä¢ DocumentProcessor\n"
                "‚Ä¢ Doc2VecTrainer\n"
                "‚Ä¢ SemanticSearchEngine\n"
                "‚Ä¢ TextSummarizer\n\n"
                "–ì–æ—Ç–æ–≤ –∫ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ GUI!",
            )

            logger.info("Backend —Ç–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")

        except Exception as e:
            QMessageBox.critical(
                self,
                "–û—à–∏–±–∫–∞ Backend",
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ backend:\n\n{str(e)}",
            )
            logger.error(f"Backend —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª: {e}")
